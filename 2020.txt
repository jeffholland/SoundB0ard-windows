
[Env]
mo = Moog(shirpyyy) vol:0 pan:0 voice:SQR3(1)
     fx0 Distortion! threshold:0.10
bl = glitchz//BLURP.aiff vol:0 pan:0 pitch:1 idx:0 mode:SMUDGE(2) step:0 len:1
bd = Sampler(kicks/808Kkick.wav) vol:1 pan:0 pitch:1
bz = Sampler(perc/bzzt.aiff) vol:1 pan:0 pitch:1
     fx0 Distortion! threshold:0.71
bw = Sampler(perc/bahWic.aiff) vol:1 pan:0 pitch:2
     fx0 Distortion! threshold:0.40
sf = Sampler(perc/surfaceFalle.aiff) vol:1 pan:0 pitch:1
     fx0 Distortion! threshold:0.20
was = pads//washey.aiff vol:0.6 pan:0 pitch:2 idx:89 mode:SMUDGE(2) step:0 len:1
      fx0 predelayms:40.00 reverbtime:587 wetmx:44.7
mac = Sampler(claps/mawOW.aiff) vol:0 pan:0 pitch:1

[Procz]
p1 # "g1 g1:<100 127 90>:<300 500 100> [a1 c1]:127:500 [a1 <c2 g2>]:127:1000" mo,bd | every 3 rotl 4 | every 2 mask "f0f0"
p2 < osc 13 "500 15000"  "set mo:fc %"
p3 < every 3 "<0.5 1 2>"  "set bd:pitch %"
p4 $ "[~ <sf bz bz bw mac>] ~ [ ~ <sf mac sf bz>] ~"
p5 < every 8 "<1 2>"  "set was:pitch %"
p6 < osc 13 "20 70"  "set was:fx0:wetmx %"
p7 < osc 14 "100 1000"  "set was:fx0:reverbtime %"



let rb = loop(loops/scuddubraggableep.aiff); set rb:len 4

kicks/dm02_909_kickdrum_006_drive.wav
notes/FoolishBackGRan.aiff
hh and sh

d1 fm for a while

dloops/SUNUN.aiff
// sidechain //

strings/elbtimeout.aiff

toms -
dloops/autechreBeat.aiff

aesamples -- perc
inc - aesamples/SH09_ACID.WAV
aesamples/shstr_03.WAV


d1

loops/stereoLabVOICE.aiff // len 16
--
loops/ONETIMECHILL.aiff // len 8

loops/UMFRANGloop.aiff // len 2
loops/PALSTUTTERPiano.aiff // len 2

loops/wonkykeys.aiff

p3 < every 4 "<0 10 20 30 40 70 50>"  "set wk:idx %"

aesamples//steeldif09.WAV
aesamples//steelxif08.WAV

// no wonkykeys

legowelt//Synth-TriffidPartyChord.wav

kicks/808kick.aif

// no wonkykeys
loops/pumpUpDaJAM.aiff
dloops//garageDrumx.aiff // len 2
dloops/ralfiRiTMO.aiff


dloops/aciiiidBeat.aiff // len 2

// dloops/PARANOIDlondon2TRIM.aiff // len 0.5 // NOT WITH TRIIFFD

BPM 120

loops/GURLblunt.aiff // bpm 120ishh
dloops/EKSIbeat.aiff
dloops/ESKIClip.aiff

loops/ACiiiiidBassSquelch.aiff
loops/ACiiiiidBassSquelch2.aiff

let zb = loop(dloops/ZeigenBOCK.aiff); addFx(zb, "sidechain", bd)
