
let d1 = fm(); loadPreset(d1, "wuurpr")

d1 = DxSynth(wuurpr) vol:1 pan:0 algo:4

[Procz]
p1 # "<c0>
p1 # "<c0*12>
bpm 160
p2 < osc 12 "80 95"  "set d1:op2out %"
p3 < osc 18 "60 94"  "set d1:op4out %"
p4 < osc 13 "1 300"  "set d1:e2att %"
p5 < every 8 "<3 4>"  "set d1:algo %"
p1 # "<c0*12 c0*12 c0*12 a0*4>" d1 | every 5 down 2

mk = Sampler(kicks/mkKick.aiff)
hh  // hats/hh8.aif

p7 $ "hh*16" | swing 11 | every 8 mask "f0f0"

let d2 = fm(); loadPreset(d2, "ZApzz")
d2 -- ZApzz
p7 # "<~ e2*4> <c1*8 ~ c0*4 a1(3,8)>" d2

BD!  kicks/dm02_909_kickdrum_006_drive.wav
ESK1

ESK2
p11 < every 3 "<1 2 1 3 16 1 127>"  "set esk2:len %"
p13 < every 2 "<1 2 16 32 127>"  "set esk2:len %"

###############################################################

bpm 140

PIERRE HOUSE - len 2
prr = dloops/pierrehouse.aiff vol:1 pan:0 pitch:1 idx:71 mode:LOOP(0) step:0 len:2

nae DRUMS!

^ FILTER?

p1 # "<c0*4 e0*4 a0*4>  <a0(3,8) e0(3,8) a0(3,8) c0(3,8)>" d1,prr | every 3 down 1 | every 7 up 1
p1 # "<c0*4 c0(3,8) c0>" d1,prr,bd

###############################################################

// clear other algoszz

p1 # "<c0*4 e0*4 a0*4 e0? c0>  <a0(3,8) e0(3,8) a0(3,8) c0(3,8)>" d1,bd | every 3 down 1 | every 7 up 1
p2 < every 3 "<1 2 3 4>"  "set d1:algo %"
p5 < osc 17 "5 7"  "set d1:o1rat %"

p1 # "<b0(3,8) b0> <[d0(3,8) gm0] gm0*7 ~>" d1 | down
p1 # "a0*4 [a0*4 <c0*4 e0(3,8)>]" d1 | every 7 mask "f0f0"
p1 # "< [<b0(3,8) b0> <[d0(3,8) gm0] gm0*7 ~>]   [a0*4 [a0*4 <c0*4 e0(3,8)>]]>" d1 | every 7 mask "f0f0"



let rb = loop(loops/scuddubraggableep.aiff); set rb:len 4


BD
p1 $ "<[bd [~ bd] ~ ~] [ bd [~ bd] [~ ~ ~ bd] [~ bd]  ] >"
cp = Sampler(claps/djkhaledClap.aiff) vol:1 pan:0 pitch:1
sn = sample(snrs/AbraSnare.aiff)

let fg = sample(notes/FoolishBackGRan.aiff)
p5 $ "<[~ [~ fg]] ~ ~ ~ ~ ~ ~ ~>"

hh1 = Sampler(hats/LOUhat.aiff) vol:0.7 pan:0 pitch:1
hh2 = Sampler(hats/timbaHat1.aiff) vol:0.7 pan:0 pitch:1
p2 $ "[~ hh1 hh2 ~]  [~ ~ hh2 ~] [hh1 hh1 hh2 ~] [~ hh2 hh2 ~]" | swing 3 | every 8 swing 11

hh and sh
let hh = sample(hats/cloeyhatz.aiff)
let sh = sample(perc/chezShaker.aiff)
ps
vol sh 0.2; vol hh 0.3;
p6 $"[sh [sh hh]] [sh [sh hh]] [~ [hh sh]] [hh*2 sh]" | swing 3  | every 8 mask "ffff"

// ?
p2 $ "hh*16" | every 7 swing 13

// NAE ALGOZ FOR D1
d1 (fboom) !!
p2 < every 3 "<1 2 3 4>"  "set d1:algo %"
p1 # "[~ g0] [~ d0 ~ ~] [b0 ~ ~ b0] [~ <g0 b0>]" d1 | down 2


< osc 17 "5 7"  "set d1:o1rat %"

# "[~ g0] [~ d0 ~ ~] [b0 ~ ~ b0] [~ <g0 b0>]" d1 | down 2 | every 7 brak | every 2 swing 3

dloops/ZeigenBOCK.aiff
// ? let elb = grain(strings/elbtimeout.aiff)

loops/stereoLabVOICE.aiff // len 16

dloops/autechreBeat.aiff

loops/ONETIMECHILL.aiff // len 8



######################


loops/UMFRANGloop.aiff // len 2
loops/PALSTUTTERPiano.aiff // len 2
p7 # "<[<44 ~ ~ 32> [ ~ <40 44 44*2 40 32 ~>] ~ ~] [ <40? 44 44 ~> [~ <32 44>] ~ ~  ]>" d1 | every 8 fast | down 2 | every 4 mask "ff00"
d1(RAVER)

toms -
let lt = sample(toms/DR660LoTom.aif)
let mt = sample(toms/DR660MidTom.aif)
let ht = sample(toms/DR660808HighTom.aif)

p11 $ "[~ <ht lt mt>] [mt <lt ht>] [~ ht ht*2 ht*3] [~ ht mt]"
dloops/autechreBeat.aiff

stop d1
let aed = sample(aesamples/SH09_ACID.WAV)
let aes = sample(aesamples/shstr_03.WAV)
p14 $ "~ ~ ~ [~ <aes aed ~ ~ ~ ~>]"




let d1 = fm(); loadPreset(d1, "timeLLy")
let bd = sample(kicks/LOUkick.aiff)
let cp = sample(claps/mawClapDelayed.aiff)
let cr = sample(noises/crnchHar.aiff)
let cp2 = sample(claps/mawOW.aiff)
let snd = sample(noises/SNDwhooshHit.aiff)
let acd = sample(noises/acidMan.aiff)


p1 # "<e*3 g*4> <e g*3 g*2>" d1 | every 7 mask "ff00"
p2 < every 3 "<3 4 5 4>"  "set d1:algo %"
p3 $ "bd ~ [~ <bd bd*2>] [~ bd?]"
p4 $ "[~ <cp cp cp? cp*2 cp2>]*2"
p5 $ "[~ <cr snd acd?>] ~ ~ [~ ~ ~ <snd cr? cr>]"


p1 # "<d*3 a*4> <f f2*3 d2*2>" d1
p1 # "f*3 a*4 c [~ c*2]" d1
p1 # "<a1*2 f1*3> <a*4 [~ a]> <c? a?> [~ c*2]" d1
