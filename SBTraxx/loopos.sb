
let naff_gen = gen()
{
  setup()
  {
    let pitchz = [1.1, 1.2, 0.8];
    let ptx = 0;
  }
  run()
  {
    vol bb 1;
    vol cb 1;
    if (count % 3 == 0) {
      vol cb 0;
      set bb:stutter 1;
      set bb:pitch pitchz[ptx];
      ptx = incr(ptx, 0, len(pitchz));
    }
    if (count % 4 == 0) {
      vol bb 0;
      set cb:stutter 1;
      set cb:pitch pitchz[ptx];
      ptx = incr(ptx, 0, len(pitchz));
    }

    for (i = 0; i < 16; ++i) {
    }


    dbeat(bd);

  }
}

let blah_gen = gen()
{
  setup()
  {
    let trx = [cmon, bed, boo,itl, stu];
    let idxlen = 3;
    let idx = 0;
    let rhym = rand_array(16, 0, len(trx));

    let drz = [50, 100, 300, 500, 700, 1000];
    let drx = 0;

    let pz = [2, 1, 0.7, 0.8, 1.2 ];
    let px = 0;
  }

  run()
  {

    for (i = 0; i < 16; ++i) {
      if (rhym[i] < len(trx)) {
        note_on_at(trx[rhym[i]], 1, i * pp, dur= drz[drx]);
        set hyp:pitch pz[px] at=i*pp;
        px = incr(px, 0, len(pz));
        drx = incr(drx, 0, len(drz));
      }
    }

    for (i = 0; i < 16; ++i) {
      if (rhym[idx] < len(trx)) {
        stepper(trx[rhym[idx]], rhym , idx, i);
        idx = incr(idx, 0, idxlen);
      }
    }
    idxlen = incr(idxlen, 2, len(rhym));
    set trx[rand(len(trx))]:active 1;


    if (count % 7 == 0) {
      rhym = rand_array(16, 0, len(trx) + 2);
    }

    for (i = 0; i < len(trx); ++i) {
      set trx[i]:active 1;
    }

    if (count % 8 < 7) {
      play_array(b8, mask(rand_beat(), "0fff"));
      set b8:pitch pz[px];
      set cp:pitch pz[px];
      set cpp:pitch pz[px];
    }
    #dbeat(pbd);
    cbeat(cp);
    cbeat(cpp);
  }
}

