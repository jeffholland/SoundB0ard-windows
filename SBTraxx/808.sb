
let chz = [40, 45, 47, 47];
#let chz = [12, 17, 19, 19];
#let chz = [70, 74, 73, 77];
let spd = [3, 5, 7];
let sx = 0;
let mel_idx = 0;
let shiftz = [2, 3, 4];
let shx = 0;

let combinor = fn(rhythm, melody)
{
  let return_melody= [];
  for (i=0; i < len(rhythm); ++i)
  {
    if (rhythm[i] > 0) {
      return_melody = push(return_melody, melody[mel_idx]);
      mel_idx = incr(mel_idx, 0, len(melody));
    } else {
      return_melody = push(return_melody, 0);
    }
  }
  return return_melody;
}

let blah_gen = gen()
{
  setup()
  {
    let bet = bjork(spd[sx], 8);
  }
  run()
  {
    if (count % 4 == 0) {
      bet = bjork(spd[sx], 8);
      sx = incr(sx, 0, len(spd));
    }
    play_array(bd, combinor(bet, chz));
    play_array(dx100, rotate(up(combinor(bet, chz),1), shiftz[shx]));
    shx = incr(shx, 0, len(shiftz));
  }
}

