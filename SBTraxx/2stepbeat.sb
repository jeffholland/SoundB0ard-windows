let subd = sample(bd/subbass1.aiff);
let mkd = sample(bd/mkKick.aiff);
let sd = sample(sd/acidHatSnare.aiff);
let hh = sample(ch/acidHat3.aiff);
let shk = sample(perc/tuffShaker.aiff);
let tmb = sample(perc/tambourine.aif);
let mawcp = sample(cp/mawClapDelayed.aiff);
vol tmb 0.2;
#set tmb:decay_ms 90;
#set shk:decay_ms 110;
#set hh:decay_ms 250;

let b2step_gen = gen()
{
  setup()
  {
    let swng = 40;
    let hatv = 80;
  }
  run()
  {
    if (count % 16 < 13) {
      if (count % 2 == 0) {
        note_on(subd, 1);
        if (rand(100) > 90) {
          note_on_at(subd, 1, 14 * pp + 120);
        }
        note_on(mkd, 1, vel = 100);
        note_on_at(mkd, 1, 11 * pp);
        note_on_at(mkd, 1, 14 * pp);
      } else {
        note_on_at(mkd, 1, 8 * pp);
        note_on_at(mkd, 1, 11 * pp);
        note_on_at(mkd, 1, 14 * pp);
      }
    }

    if (count % 2 == 0) {
      swng = swng + 10;
      if (swng > 140) {
        swng = 40;
      }
    }

    for (i = 0; i < 16; ++i) {
      hatv = hatv + 20;

      if (count % 16 < 13) {
        if (count % 2 == 0) {
          if (i == 0 || i == 11 || i == 14) {
            hatv = 80;
          }
        } else {
          if (i == 8 || i == 11 || i == 14) {
            hatv = 80;
          }
        }
      }
      if (hatv > 127) {
        hatv = 80;
      }

      let offset = 0;
      if ( i % 2 == 1) {
        offset = swng;
      }
      let tick = i * pp + offset;

      if (count % 9 < 6) {
        let v = rand(72) + 35;
        note_on_at(tmb, 1, tick, vel = v);
      }

      if (count % 19 < 4) {
        if (i == 4 || i == 12) {
          note_on_at(sd, 1, tick - rand(20));
          note_on_at(mawcp, 1, tick + rand(20));
        }
      }

      if (count % 24 < 22) {
        if ( i % 4 == 2) {
          let v = rand(92) + 35;
          note_on_at(hh, 1, tick, vel = hatv);
        }
      }

      if (count % 16 < 10) {
        if (i == 1 && rand(100) < 90) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 2 && rand(100) < 50) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 6 && rand(100) < 90) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 7 && rand(100) < 50) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 9 && rand(80) < 50) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 10 && rand(80) < 50) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
        if (i == 11 && rand(80) < 50) {
          let v = rand(92) + 35;
          note_on_at(shk, 1, tick, vel = hatv);
        }
      }
    }
  }
}

# chuggie
# clavichord
# c3llo
# boardy2 **
# flexxy0c **
# swqSAW
# phiola
let mostringz_gen = gen()
{
  setup()
  {
    #let notez =  [63, 68];
    #let notez1 =  [51, 56, 51, 56, 58, 49];
    let notez1 =  [51, 56, 56, 49];
    let notez2 =  [44, 44, 44, 44];
    let notez =  notez1;
    let nx = 0;
    #let durz = [2000, 1700, 1500, 1200, 900, 500, 250];
    let durz = [200, 500, 800, 100, 200];
    let drx = 0;
    let divr = 16;
    let beat = rand_array(divr, 0, 1);
    let pp = 3840 / divr;
    let msk = "f0a0";
    let vz = [120, 115, 100];
    #let vz = [120];
    let vzx = 0;
    let dwnz = [24, 12, 24];
    #let dwnz = [0, 0, 0, -12];
    let dwx = 0;
  }
  run()
  {
    if (count % 3 == 0) {
      beat = rand_array(divr, 0, 1);
      nx = incr(nx, 0, len(notez));
      dwx = incr(dwx, 0, len(dwnz));
    }
    if (count % 2 == 0) {
      msk = rotate(msk, 1);
    }
    if (count % 32 == 0) {
      notez = notez2;
    } else {
      if (count % 32 == 24) {
        notez = notez1;
      }
    }
    let ntz = down(notes_in_chord(notez[nx], 1, 1), dwnz[dwx]);
    # halien
    if (count % 12 == 11) {
      print("DX!!");
      note_on(dx, down(ntz,12), dur = 4000);
    }

    let thbeat = beat;
    if (count % 12 < 10) {
      let nxx = 0;
      for (i = 0; i < divr; ++i) {
        if (thbeat[i] == 1) {
          #note_on_at(mo, ntz[nxx], i * pp, vel = vz[vzx], dur = durz[drx]);
          note_on_at(mo, ntz, i * pp, vel = vz[vzx], dur = durz[drx]);
          nxx = incr(nxx, 0, len(ntz));
          drx = incr(drx, 0, len(durz));
        }
      }
      vzx = incr(vzx, 0, len(vz));
    }
  }
}


# let ready = loop(voices/readyornot.wav); set ready:len 2; vol ready 0
# let ready2 = loop(voices/readyOrNot2.wav); set ready2:len 2; vol ready2 0
let readyblah_gen = gen()
{
  setup()
  {
    let b = rand_array(16, 0, 2);
  }
  run()
  {

    if (count % 8 == 0) {
      b = rand_array(16, 0, 2);
    }
    if (count % 16 < 15) {
      if (count % 8 < 7) {
        set ready:stutter 1;
      }
      if (count % 4 < 3) {
        set ready2:stutter 1;
      }

      if (count % 4 == 2) {
        for (i = 0; i < 16; ++i) {
          if (b[i] == 0) {
            note_on_at(ready, 1, i * pp);
          }
        }
      }

      if (count % 6 = 4) {
        for (i = 0; i < 16; ++i) {
          if (b[i] == 0) {
            note_on_at(ready2, 1, i * pp);
          }
        }
      }
    }
  }
}

let moog_midi_assign = fn()
{
  midi_map(1, "mo:eg1_attack");
  midi_map(2, "mo:eg1_decay");
  midi_map(3, "mo:eg1_release");
  midi_map(4, "mo:l1rate");
  midi_map(5, "mo:fc");
  midi_map(6, "mo:fq");
}

let ah2 = sample(brandyvocalz/ah2.wav);
let aye = sample(brandyvocalz/aye.wav);
let gu = sample(brandyvocalz/gu.wav);
let te = sample(brandyvocalz/te.wav);
let teh = sample(brandyvocalz/teh.wav);
let ut = sample(brandyvocalz/ut.wav);
let waii = sample(brandyvocalz/waii.wav);
let wut = sample(brandyvocalz/wut.wav);

vol ah2 0.2;
vol aye 0.2;
vol gu 0.2;
vol te 0.2;
vol teh 0.2;
vol ut 0.2;
vol waii 0.2;
vol wut 0.2;


#let branz = [gu, te, teh, waii];
let branz = [ah2, aye, wut];
let bx = 0;

let brandylah_gen = gen()
{
  setup()
  {
    let beat = rand_array(16, 0, len(branz) + 2);
  }
  run()
  {
    if (count % 8 > 6) {
      for (i = 0; i < 16; ++i) {
        if (beat[i] < len(branz)) {
          note_on_at(branz[beat[i]], 1, i * pp);
        }
      }
    }
    if (count % 11 == 0) {
      beat = rand_array(16, 0, len(branz) + 2);
    }
  }
}

