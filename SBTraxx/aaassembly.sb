let axf = sample(legowelt/FX-AcidPlanetStyle.wav);
#let bsa = loop(loops/busitACID.aiff);
#let sb = loop(dloops/scudBeat2.aiff);


# let rhy = loop(aaassembly/rhythmGUITAR.wav);

# let acid = loop(aaassembly/hiphouseACID.wav)

let start_gen = gen()
{
  setup()
  {
    let ptz = [1, 1.2, 0.7, 2];
    #let ptz = [0.6, 0.8, 0.7, 1];
    let ptx = 0;
    let lenz = [1,2];
    let lx = 0;
  }
  run()
  {
    #set rhy:stutter 1;
    #set wh:stutter 1;
    if (count % 2 == 0) {
      unsolo();
      note_on(axf,1 );
      set hb:pitch ptz[ptx];
      set axf:pitch ptz[ptx];
      ptx = incr(ptx, 0, len(ptz));
      #set yeahman:scramble 1;
      #set rlf:scramble 1;
      #set hatz:len lenz[lx];
      #lx = incr(lx, 0, len(lenz));
    }
    if (count % 3 == 0) {
      #set dsc:scramble 1;
      #set rf:stutter 1;
      set sb:stutter 1;
      #set rbb:pitch ptz[ptx];
      #set poi:stutter 1;
      #set yeahman:stutter 1;
      set hb:stutter 1;
      ####set nloop:scramble 1;
      set acid:stutter 1;
      #set turnit:scramble 1;
      set bsa:scramble 1;
      #set gd:scramble 1;
      #set yoyo:stutter 1;
      #set rlf:stutter 1;
    }
    if (count % 4 == 0) {
      set acid:scramble 1;
      #set dsc:stutter 1;
      #set wh:scramble 1;
      #set iget:stutter 1;
      set sb:scramble 1;
      set bsa:stutter 1;
      #set rhy:scramble 1;
      #set yoyo:pitch ptz[ptx];
      #set rf:pitch ptz[ptx];
      #set rlf:pitch ptz[ptx];
    }
    if (count % 7 == 0) {
      solo(hb);
    }
  }
}

let hhblah_gen = gen()
{
  setup()
  {
    let swing = 20;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      let offset = 0;
      if (i % 2 == 1) {
        offset = swing;
      }
      note_on_at(hh, 1, i*pp + offset);

      if (i % 3 == 0) {
        note_on_at(bsa, 1, i*pp);
      }
      if (i % 4 == 0) {
        set bsa:active 1;
      }
    }
  }
}

# let iget = loop(aaassembly/iegtMAD.wav) ; set iget:len 4 ; solo(iget)

# let yoyo = loop(aaassembly/yoyoredman.wav); set yoyo:len 2; solo(yoyo);

# vol sb 0;

# let hb = loop(dloops/hausBreakBeat.aiff);

# let joey = loop(aaassembly/NYhouseJOEY.wav)

# let yeahman = loop(aaassembly/yeahMAN.wav); set yeahman:len 4

let uus = sample(perc/uus.wav);
let cons = sample(aaassembly/BDPconscious.wav);
let kil = sample(aaassembly/killer.wav);

# let turnit = loop(aaassembly/hiphouseTURNIOUT.wav);


let blah_gen = gen()
{
  setup()
  {
    let sampz =[cons, kil, uus];
    let rhm = rand_array(16, 0, len(sampz) + 3);
  }
  run()
  {
    if (count % 3 == 0) {
      for (i = 0; i < 16; ++i) {
        if (rhm[i] < len(sampz)) {
          note_on_at(sampz[rhm[i]], 1, i*pp);
        }
      }
    }
    if (count % 8 == 0) {
      rhm = rand_array(16, 0, len(sampz) + 3);
    }
  }
}

# let snh = loop(loops/strongsNHats.aiff); set snh:len 8

let steppa = gen()
{
  setup()
  {
    let hatz = rand_array(16, 0, 1);
    let db = rand_beat();
    let cpz = rand_beat();

    let idx = 0;
    let plen = 3;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      stepper(bd, db, idx, i);
      stepper(yoyo, db, idx, i);
      stepper(cp, shiko, idx, i);
      stepper(hh, hatz, idx, i);
      idx = incr(idx, 0, plen);
    }
    plen = incr(plen, 1, 16);

    if (count % 12 == 0) {
      db = rand_beat();
    }
  }
}

