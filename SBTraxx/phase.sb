let freqs=[64, 66, 71, 73, 74, 66, 64, 73, 71, 66, 74, 73];


let blah_gen = gen()
{
  setup()
  {
    let pp = 3840 / len(freqs);
    let bars_2_phase_over = 32;
    let qpp = (3840* bars_2_phase_over) / (len(freqs) * bars_2_phase_over + 1);
    print("QPP:", qpp);
    let num_times_4_phase = 3840 / qpp;
    let frx = 0;
    let carry = 0;
    let drz = [2, 7, 10, 20, 35, 42, 57, 77, 84, 97 ];
    let dx = 0;
    let mycount = 0;
  }
  run()
  {
    # normal time
    for (i = 0; i < len(freqs); ++i) {
      note_on_at(mo, freqs[i], i * pp, dur=drz[dx]);
    }

    mycount = incr(mycount, 0, bars_2_phase_over);;
    if (mycount == 0) {
      should_phase = false;
    }

    if (should_phase) {
      for (i = 0; i < len(freqs); ++i ) {
        let time_at = i * qpp + carry;
        note_on_at(mo2, freqs[frx], time_at, dur=drz[dx]);
        frx = incr(frx, 0, len(freqs));
      }
      let last_idx = (len(freqs) * qpp) + carry;
      if (last_idx < 3840) {
        note_on_at(mo2, freqs[frx], last_idx, dur=drz[dx]);
        frx = incr(frx, 0, len(freqs));
        let diff = 3840 - last_idx;
        carry = qpp - diff;
      } else {
        carry = last_idx - 3840;
      }
    } else {
      for (i = 0; i < len(freqs); ++i) {
        note_on_at(mo2, freqs[frx], i * pp, dur=drz[dx]);
        frx = incr(frx, 0, len(freqs));
      }
    }

    dx = incr(dx, 0, len(drz));
  }
}

