load_dir("aesamples");


let kick_gen = gen()
{
  setup()
  {
    let bdz = [SH09_KIK];
    let bx = 0;
    let beat = rand_beat();
    print("BEAT IS ", beat);
  }
  run()
  {
    if (count % 3 == 0) {
      beat = rand_beat();
    }

    if (count % 8 < 7) {
      for (i = 0; i < 16; ++i) {
        if (beat[i] == 1) {
          note_on_at(bdz[bx], 1, pp*i);
          if (rand(100) > 70) {
            bx = incr(bx, 0, len(bdz));
          }
        }
      }
    }

  }
}

vol SH09_HAT 0.3;

let perc_gen = gen()
{
  setup()
  {
    let pattern = rand_array(16, 0, 6);
    let percz = [SPSKikB, steeldif09, steelxif02, SH09_SNRZ, SH09_HAT];
    let plen = 1;
  }
  run()
  {
    if (count % 8 == 0) {
      pattern = rand_array(16, 0, 6);
    }
    for (i = 0; i < 16; ++i) {
      if (pattern[i] < plen) {
        note_on_at(percz[pattern[i]], 1, i*pp);
      }
    }
    plen = incr(plen, 1, len(percz));
    pattern = rotate(pattern, 3);
  }
}

let noise_gen = gen()
{
  setup()
  {
    let noizes = [SH09_ACID, SHSTR_26x];
    let nidx = 0;
  }
  run()
  {
    if (count % 3 == 0) {
      note_on(noizes[nidx], 1);
      nidx = incr(nidx, 0, len(noizes));
    }
  }
}

let melo_gen = gen()
{
  setup()
  {
    let notes = [23, 14, 19, 7, 2, 37];
    let rhythm = rand_beat();
  }
  run()
  {
    if (count % 4 == 0 || count % 3 == 0) {
      for (i = 0; i < 16; ++i) {
        if (rhythm[i] == 1) {
          # print("MUSIC SENDING NOTE ON AT");
          note_on_at(dxx, notes[rand(len(notes))], pp*i);
        }
      }
    }
  }
}


